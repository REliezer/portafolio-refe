---
import type { RecipesEntry } from "@/types";
import Share from "@components/common/Share.astro";
import { Image } from "astro:assets";
import BaseLayout from "@components/base/BaseLayout.astro";
import { upperHumanize, markdownify, slugify } from "@lib/textConverter";
import { formatDate } from "@lib/formatDate";

import {
  FaGithub,
  FaLink,
  FaRegClock,
  FaRegFolder,
  FaRegUserCircle,
} from "react-icons/fa";

interface Props {
  entry: RecipesEntry;
}

const { entry } = Astro.props;
const {
  title,
  resume,
  date,
  image,
  imageAlt,
  categories,
  author,
  stack,
  description,
  content,
  github,
  link,
} = entry.data;

const entryDate = date ? formatDate(date) : null;
---

<BaseLayout title={title} description={resume} image={image?.src}>
  <section class="section">
    <div class="container">
      <div class="row justify-center">
        <article class="lg:col-10 flex flex-wrap content-start">
          <!-- Title -->
          <h1 set:html={title} class="p-2 col basis-full min-w-72" />
          <!-- Cover Photo -->
          {
            image && (
              <div class="col basis-2/3 p-2 min-w-72">
                <div class="glass rounded-lg intersect:animate-fadeDown opacity-0">
                  <Image
                    class="w-full rounded-lg"
                    src={image}
                    alt={imageAlt}
                    width={1920}
                    height={1080}
                    loading="eager"
                  />
                </div>
              </div>
            )
          }
          <!-- About -->
          <section class="col basis-1/3 p-2 min-w-72">
            <div
              class="glass rounded-lg p-2 h-full intersect:animate-fadeUp opacity-0"
            >
              <!-- Author -->
              {
                author && (
                  <div class="m-4">
                    <a href={`/about/`}>
                      <FaRegUserCircle className={"mr-2 -mt-1 inline-block"} />
                      {upperHumanize(author)}
                    </a>
                  </div>
                )
              }
              <!-- Date -->
              {
                entryDate && (
                  <div class="m-4">
                    <FaRegClock className={"mr-2 -mt-1 inline-block"} />
                    {entryDate}
                  </div>
                )
              }
              <!-- Categories -->
              {
                categories && (
                  <>
                    <div class="m-4">
                      <FaRegFolder className={"mr-2 -mt-1 inline-block"} />
                      Categories
                    </div>
                    <div class="row m-4">
                      <div class="col-12">
                        {categories.map((category: string, index: number) => (
                          <li>
                            <a
                              href={`/recipes/categories/${slugify(category)}`}
                            >
                              {upperHumanize(category)}
                            </a>
                          </li>
                        ))}
                      </div>
                    </div>
                  </>
                )
              }
              <!-- GitHub -->
              {
                github && (
                  <div class="m-4">
                    <a href={github}>
                      <FaGithub className={"mr-2 -mt-1 inline-block"} />
                      Repositorio GitHub
                    </a>
                  </div>
                )
              }
              <!-- Link -->
              {
                link && (
                  <div class="m-4">
                    <a href={link}>
                      <FaLink className={"mr-2 -mt-1 inline-block"} />
                      Web
                    </a>
                  </div>
                )
              }
              <!-- Description -->
              {
                resume && (
                  <div>
                    {author ? <hr class="my-2" /> : null}
                    <div class="m-4">
                      <div set:html={markdownify(resume)} />
                    </div>
                  </div>
                )
              }
            </div>
          </section>
          <!-- Descripcion -->
          {
            description && (
              <section class="col basis-full p-2 min-w-72">
                <div class="glass rounded-lg p-4 intersect:animate-fadeUp opacity-0">
                  <h2 class="mb-2">Descripción del proyecto</h2>
                  <div class="justify-center">
                    <div class="text-justify my-1">{description}</div>
                    <hr class="my-1" />
                  </div>
                </div>
              </section>
            )
          }
          <!-- Contenido -->
          {
            content && (
              <section class="col basis-full p-2 min-w-72">
                <div class="glass rounded-lg p-4 intersect:animate-fadeUp opacity-0">
                  <h2 class="mb-2">Contenido:</h2>
                  <div class="row justify-center">
                    {content.map((item, index) => (
                      <div class="my-1">
                        <h3>{item.nombre}</h3>
                        {item.modulos &&
                          item.modulos.length > 0 &&
                          item.modulos.map((mod: string, i: number) => (
                            <div class="ml-4">
                              {i + 1}. {mod}
                            </div>
                          ))}
                      </div>
                    ))}
                    <hr class="my-1" />
                  </div>
                </div>
              </section>
            )
          }
          <!-- Tecnologias -->
          {
            stack && (
              <section class="col basis-1/3 p-2 min-w-72">
                <div class="glass rounded-lg p-4 intersect:animate-fadeUp opacity-0">
                  <h2 class="mb-2">Técnologias utilizadas</h2>
                  <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4">
                    {Object.entries(stack).map(
                      ([key, values]) =>
                        values?.length > 0 && (
                          <div key={key}>
                            <h3 class="text-left capitalize">
                              {key === "baseDatos"
                                ? "Base de Datos"
                                : key === "almacenamiento"
                                  ? "Almacenamiento"
                                  : key === "otros"
                                    ? "Otros"
                                    : key.charAt(0).toUpperCase() +
                                      key.slice(1)}
                            </h3>
                            <ul class="list-disc list-inside text-sm mt-1">
                              {values.map((it: string) => (
                                <li key={it} class="ml-2">
                                  {it}
                                </li>
                              ))}
                            </ul>
                          </div>
                        ),
                    )}
                  </div>
                  <hr class="my-1" />
                </div>
              </section>
            )
          }
        </article>
        <!-- Share -->
        <div
          class="flex col-10 p-2 items-center justify-center lg:justify-end px-6"
        >
          <Share
            title={title}
            description={resume}
            folder="recipes"
            id={entry.id}
          />
        </div>
      </div>
    </div>
  </section>
</BaseLayout>
